const laravelMessages = {
    accepted: 'The :attribute must be accepted.',
    after: 'The :attribute must be a date after :date.',
    afterOrEqual: 'The :attribute must be a date after or equal to :date.',
    alpha: 'The :attribute may only contain letters.',
    alphaDash: 'The :attribute may only contain letters, numbers, and dashes.',
    alphaNum: 'The :attribute may only contain letters and numbers.',
    array: 'The :attribute must be an array.',
    before: 'The :attribute must be a date before :date.',
    beforeOrEqual: 'The :attribute must be a date before or equal to :date.',
    between: {
        numeric: 'The :attribute must be between :min and :max.',
        file: 'The :attribute must be between :min and :max kilobytes.',
        string: 'The :attribute must be between :min and :max characters.',
        array: 'The :attribute must have between :min and :max items.',
    },
    boolean: 'The :attribute field must be true or false.',
    confirmed: 'The :attribute confirmation does not match.',
    date: 'The :attribute is not a valid date.',
    dateFormat: 'The :attribute does not match the format :format.',
    different: 'The :attribute and :other must be different.',
    digits: 'The :attribute must be :digits digits.',
    digitsBetween: 'The :attribute must be between :min and :max digits.',
    dimensions: 'The :attribute has invalid image dimensions.',
    distinct: 'The :attribute field has a duplicate value.',
    email: 'The :attribute must be a valid email address.',
    file: 'The :attribute must be a file.',
    filled: 'The :attribute field is required.',
    image: 'The :attribute must be an image.',
    in: 'The selected :attribute is invalid.',
    inArray: 'The :attribute field does not exist in :other.',
    integer: 'The :attribute must be an integer.',
    ip: 'The :attribute must be a valid IP address.',
    json: 'The :attribute must be a valid JSON string.',
    max: {
        numeric: 'The :attribute may not be greater than :max.',
        file: 'The :attribute may not be greater than :max kilobytes.',
        string: 'The :attribute may not be greater than :max characters.',
        array: 'The :attribute may not have more than :max items.',
    },
    mimes: 'The :attribute must be a file of type: :values.',
    mimetypes: 'The :attribute must be a file of type: :values.',
    min: {
        numeric: 'The :attribute must be at least :min.',
        file: 'The :attribute must be at least :min kilobytes.',
        string: 'The :attribute must be at least :min characters.',
        array: 'The :attribute must have at least :min items.',
    },
    notIn: 'The selected :attribute is invalid.',
    numeric: 'The :attribute must be a number.',
    present: 'The :attribute field must be present.',
    regex: 'The :attribute format is invalid.',
    required: 'The :attribute field is required.',
    requiredIf: 'The :attribute field is required when :other is :value.',
    requiredUnless: 'The :attribute field is required unless :other is in :values.',
    requiredWith: 'The :attribute field is required when :values is present.',
    requiredWithAll: 'The :attribute field is required when :values is present.',
    requiredWithout: 'The :attribute field is required when :values is not present.',
    requiredWithoutAll: 'The :attribute field is required when none of :values are present.',
    same: 'The :attribute and :other must match.',
    size: {
        numeric: 'The :attribute must be :size.',
        file: 'The :attribute must be :size kilobytes.',
        string: 'The :attribute must be :size characters.',
        array: 'The :attribute must contain :size items.',
    },
    string: 'The :attribute must be a string.',
    timezone: 'The :attribute must be a valid zone.',
    uploaded: 'The :attribute failed to upload.',
    url: 'The :attribute format is invalid.',
}

export default {
    accepted: 'The :attribute must be accepted.',
    alpha: 'The :attribute field can only consist of alphabetic characters.',
    alphaNum: 'The :attribute field can only consist of alphanumeric characters.',
    alphaDash: 'The :attribute field can only consist of letters, numbers, -\'s, and _\'s.',
    between: 'The :attribute field must be a number between :min and :max.',
    email: 'The :attribute field must be a valid email address',
    maxLength: 'The :attribute field cannot be longer than :max characters.',
    minLength: 'The :attribute field must be at least :min characters long.',
    numeric: 'The :attribute field can only consist of numeric characters',
    required: 'The :attribute field is required.',
    url: 'The :attribute field must be a valid URL.',
    sameAs: 'The :attribute field must match the :eq field.'
}